// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/go-kratos/kx-boutique/app/cart/service/internal/biz"
	"github.com/go-kratos/kx-boutique/app/cart/service/internal/conf"
	"github.com/go-kratos/kx-boutique/app/cart/service/internal/data"
	"github.com/go-kratos/kx-boutique/app/cart/service/internal/server"
	"github.com/go-kratos/kx-boutique/app/cart/service/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, logger log.Logger) (*kratos.App, error) {
	cartRepo := data.NewCartRepo(logger)
	cartUseCase := biz.NewCartUseCase(cartRepo, logger)
	cartService := service.NewCartService(cartUseCase, logger)
	grpcServer := server.NewGRPCServer(confServer, logger, cartService)
	registrar := server.NewRegistrar(registry)
	app := newApp(logger, grpcServer, registrar)
	return app, nil
}
